1- Classe e Objeto em Java e C++

Em Java e C++, uma classe é um modelo ou um plano a partir do qual os objetos são criados. Ela define um tipo de dado, mas não ocupa nenhum espaço na memória. Por exemplo, uma classe Carro pode ter campos como marca, modelo e cor, e métodos como acelerar() e frear().
Um objeto é uma instância de uma classe. Quando uma classe é definida, apenas a especificação para o objeto é definida; nenhum espaço de memória é alocado. Quando um objeto da classe é criado, então o espaço é alocado para ele.
Exemplos:
Java:
Java
Código gerado por IA. Examine e use com cuidado. Mais informações em perguntas frequentes.

class Carro {
    String marca;
    String modelo;
    String cor;
    void acelerar() { /*...*/ }
    void frear() { /*...*/ }
}
Carro meuCarro = new Carro();
C++:
class Carro {
    public:
        string marca;
        string modelo;
        string cor;
        void acelerar() { /*...*/ }
        void frear() { /*...*/ }
};
Carro meuCarro;

2- Declaração de Variáveis e Tipos de Dados Primitivos

Em Java, uma variável é declarada da seguinte forma: tipo nomeDaVariavel;. Os tipos de dados primitivos mais comuns em Java são int, char, double, boolean.
Em C++, uma variável é declarada de maneira semelhante: tipo nomeDaVariavel;. Os tipos de dados primitivos mais comuns em C++ são int, char, double, bool.
Exemplos:
Java:
Java
Código gerado por IA. Examine e use com cuidado. Mais informações em perguntas frequentes.

int idade;
char genero;
double salario;
boolean estaCasado;
C++:
int idade;
char genero;
double salario;
bool estaCasado;

3- Herança em Java e C++

A herança é um dos pilares da Programação Orientada a Objetos (POO). Ela permite que você crie uma nova classe a partir de uma classe existente.
Em Java, a herança é realizada usando a palavra-chave extends.
Em C++, a herança é realizada usando o caractere : seguido pelo tipo de herança (public, protected ou private) e o nome da classe base.
Exemplos:
Java:
Java
Código gerado por IA. Examine e use com cuidado. Mais informações em perguntas frequentes.

class Veiculo {
    int velocidade;
    void acelerar() { /*...*/ }
}
class Carro extends Veiculo {
    int numeroDePortas;
}
C++:
class Veiculo {
    public:
        int velocidade;
        void acelerar() { /*...*/ }
};
class Carro : public Veiculo {
    public:
        int numeroDePortas;
};

4- Variáveis em Java e Ponteiros em C++

Em Java, quando declaramos uma variável de um tipo de objeto, estamos realmente criando um ponteiro para um objeto. Por exemplo, Carro meuCarro = new Carro(); cria um ponteiro meuCarro para um novo objeto Carro.
Em C++, a situação é um pouco diferente. Quando declaramos uma variável de um tipo de objeto, como Carro meuCarro;, estamos realmente criando um objeto, não um ponteiro. Se quisermos criar um ponteiro, teríamos que usar o operador new, como em Carro* meuCarro = new Carro();.